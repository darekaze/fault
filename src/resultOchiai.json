{
  "total_passes": 1,
  "total_fails": 29,
  "coverage_matrix": [
    {
      "_line_no": 1,
      "code": "class Node:\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 2,
      "code": "    def __init__(self, val):\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 3,
      "code": "        self.left = None\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 4,
      "code": "        self.right = None\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 5,
      "code": "        self.data = val\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 6,
      "code": "\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 7,
      "code": "\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 8,
      "code": "def binary_insert(root, node):\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 9,
      "code": "    if root is None:\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 10,
      "code": "        root = node\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 11,
      "code": "    else:\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 12,
      "code": "        if root.data >> node.data:\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 13,
      "code": "            if root.left is None:\n",
      "n_cover": [
        0,
        4
      ],
      "n_uncover": [
        1,
        25
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "F",
        "O",
        "O",
        "O",
        "O",
        "F",
        "O",
        "O",
        "O",
        "O",
        "O",
        "F",
        "O",
        "O",
        "O",
        "F",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0.3713906763541037,
      "rank": 28
    },
    {
      "_line_no": 14,
      "code": "                root.left = node\n",
      "n_cover": [
        0,
        4
      ],
      "n_uncover": [
        1,
        25
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "F",
        "O",
        "O",
        "O",
        "O",
        "F",
        "O",
        "O",
        "O",
        "O",
        "O",
        "F",
        "O",
        "O",
        "O",
        "F",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0.3713906763541037,
      "rank": 28
    },
    {
      "_line_no": 15,
      "code": "            else:\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 16,
      "code": "                binary_insert(root.left, node)\n",
      "n_cover": [
        0,
        1
      ],
      "n_uncover": [
        1,
        28
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "F",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0.18569533817705186,
      "rank": 30
    },
    {
      "_line_no": 17,
      "code": "        else:\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 18,
      "code": "            if root.right is None:\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 19,
      "code": "                root.right = node\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 20,
      "code": "            else:\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 21,
      "code": "                binary_insert(root.right, node)\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 22,
      "code": "\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 23,
      "code": "\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 24,
      "code": "def get_sorted_list(root):\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 25,
      "code": "    current = root\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 26,
      "code": "    s = []  # initialze stack\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 27,
      "code": "    done = 0\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 28,
      "code": "    sorted_list = []\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 29,
      "code": "    while(not done):\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 30,
      "code": "        if current is not None:\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 31,
      "code": "            s.append(current)\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 32,
      "code": "            current = current.left\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 33,
      "code": "        else:\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 34,
      "code": "            if(len(s) > 0):\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 35,
      "code": "                current = s.pop()\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 36,
      "code": "                sorted_list.append(current.data)\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 37,
      "code": "                current = current.right\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 38,
      "code": "            else:\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 39,
      "code": "                done = 1\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 40,
      "code": "    return sorted_list\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 41,
      "code": "\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 42,
      "code": "\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 43,
      "code": "def sort(alist=None):\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 44,
      "code": "    if alist is None or len(alist) == 0:\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 45,
      "code": "        return\n",
      "n_cover": [
        0,
        0
      ],
      "n_uncover": [
        1,
        29
      ],
      "coverage": [
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O",
        "O"
      ],
      "suspiciousness": 0,
      "rank": 49
    },
    {
      "_line_no": 46,
      "code": "    r = Node(alist[0])\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 47,
      "code": "    for i in range(1, len(alist)):\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 48,
      "code": "        binary_insert(r, Node(alist[i]))\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    },
    {
      "_line_no": 49,
      "code": "    return get_sorted_list(r)\n",
      "n_cover": [
        1,
        29
      ],
      "n_uncover": [
        0,
        0
      ],
      "coverage": [
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "P",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F",
        "F"
      ],
      "suspiciousness": 0.9831920802501751,
      "rank": 1
    }
  ]
}